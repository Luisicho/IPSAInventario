namespace IPSAInventario.Migrations
{
	using System;
	using System.Data.Entity.Migrations;
	
	public partial class TriggersDB : DbMigration
	{
		public override void Up()
		{
			/*MANDA ERROR SI AL AGREGAR UN MONITOR ESTE YA EXISTE(IDPeriferico) EN IMPRESORA O AUXILIAR, Y CREA UN PERIFERICO NUEVO VACIO SI NO EXISTIA ANTES*/
			Sql("CREATE TRIGGER TGR_INST_MONITOR			ON Monitor			FOR INSERT			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDPM CHAR(7)					SET @IDPM = (SELECT IDPeriferico FROM INSERTED)					IF EXISTS(SELECT @IDPM FROM Impresora)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A IMPRESORA'					 END					IF EXISTS(SELECT @IDPM FROM Auxiliar)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A AUXILIAR'					 END					IF NOT EXISTS(SELECT @IDPM FROM Perifericos)					 BEGIN						INSERT INTO Perifericos(IDPeriferico) VALUES(@IDPM)						PRINT 'SE INSERTO A PERIFERICOS EL ID'					 END				 END				");
			/*MANDA ERROR SI AL AGREGAR UN AUXILIAR ESTE YA EXISTE(IDPeriferico) EN IMPRESORA O MONITOR, Y CREA UN PERIFERICO NUEVO VACIO SI NO EXISTIA ANTES*/
			Sql("CREATE TRIGGER TGR_INST_AUXILIAR			ON Auxiliar			FOR INSERT			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDPA CHAR(7)					SET @IDPA = (SELECT IDPeriferico FROM INSERTED)					IF EXISTS(SELECT @IDPA FROM Impresora)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A IMPRESORA'					 END					IF EXISTS(SELECT @IDPA FROM Monitor)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A MONITOR'					 END					IF NOT EXISTS(SELECT @IDPA FROM Perifericos)					 BEGIN						INSERT INTO Perifericos(IDPeriferico) VALUES(@IDPA)						PRINT 'SE INSERTO A PERIFERICOS EL ID'					 END				 END				");
			/*MANDA ERROR SI AL AGREGAR UN IMPRESORA ESTE YA EXISTE(IDPeriferico) EN AUXILIAR O MONITOR, Y CREA UN PERIFERICO NUEVO VACIO SI NO EXISTIA ANTES*/
			Sql("CREATE TRIGGER TGR_INST_IMPRESORA			ON Impresora			FOR INSERT			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDPM CHAR(7)					SET @IDPM = (SELECT IDPeriferico FROM INSERTED)					IF EXISTS(SELECT @IDPM FROM Auxiliar)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A AUXILIAR'					 END					IF EXISTS(SELECT @IDPM FROM Monitor)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDPERIFERICO YA ASIGNADO A MONITOR'					 END					IF NOT EXISTS(SELECT @IDPM FROM Perifericos)					 BEGIN						INSERT INTO Perifericos(IDPeriferico) VALUES(@IDPM)						PRINT 'SE INSERTO A PERIFERICOS EL ID'					 END				 END				");
			/*MANDA ERROR AL ENCONTRAR QUE ESTA RANURA(IDRanura) YA ESTA SIENDO UTILIZADA POR UN PERIFERICO*/
			Sql("CREATE TRIGGER TGR_INST_HARDWARE			ON Ranura_Detalle_Hard			FOR INSERT			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDRH INT					SET @IDRH = (SELECT IDRanura FROM INSERTED)					IF EXISTS(SELECT @IDRH FROM Ranura_Detalle_Per)					 BEGIN						ROLLBACK TRANSACTION						PRINT 'ERROR AL INSERTAR IDRANURA YA ASIGNADO A PERIFERICO'					 END				 END				");
			/*MANDA ERROR AL ENCONTRAR QUE ESTA RANURA(IDRanura) YA ESTA SIENDO UTILIZADA POR UN HARDWARE*/
			Sql("CREATE TRIGGER TGR_INST_PERIFERICO ON Ranura_Detalle_Per FOR INSERT AS BEGIN	SET NOCOUNT ON	DECLARE @IDRP INT	SET @IDRP = (SELECT IDRanura FROM INSERTED)	IF EXISTS(SELECT @IDRP FROM Ranura_Detalle_Hard)	 BEGIN		ROLLBACK TRANSACTION 		PRINT 'ERROR AL INSERTAR IDRANURA YA ASIGNADO A HARDWARE'	 END END");
			/*ELIMINA EL PERIFERICO EN TODAS LAS TABLAS RELACIONADAS, MENOS EN DETALLE DE FACTURA*/
			Sql("CREATE TRIGGER TGR_DEL_PERIFERICOS ON Perifericos FOR DELETE AS BEGIN	SET NOCOUNT ON	DECLARE @IDP CHAR(7)	SET @IDP = (SELECT IDPeriferico FROM DELETED)	IF EXISTS(SELECT @IDP FROM Impresora)	 BEGIN		DELETE FROM Impresora WHERE IDPeriferico = @IDP		PRINT 'SE ELIMINO IMPRESORA'	 END	IF EXISTS(SELECT @IDP FROM Auxiliar)	 BEGIN		DELETE FROM Auxiliar WHERE IDPeriferico = @IDP		PRINT 'SE ELIMINO AUXILIAR'	 END	IF EXISTS(SELECT @IDP FROM Monitor)	 BEGIN		DELETE FROM Monitor WHERE IDPeriferico = @IDP		PRINT 'SE ELIMINO MONITOR'	 END	IF EXISTS(SELECT @IDP FROM Computadora_Perifericos)	 BEGIN		DELETE FROM Computadora_Perifericos WHERE IDPeriferico = @IDP		PRINT 'SE ELIMINO PERIFERICO DE COMPUTADORA'	 END	IF EXISTS(SELECT @IDP FROM Ranura_Detalle_Per)	 BEGIN		DELETE FROM Ranura_Detalle_Per WHERE IDPeriferico = @IDP		PRINT 'SE ELIMINO PERIFERICO DE RANURA'	 END END");
			/*ELIMINA LA RANURA EN TODAS LAS TABLAS RELACIONADAS*/
			Sql("CREATE TRIGGER TGR_DEL_RANURAS ON Ranuras FOR DELETE AS BEGIN	SET NOCOUNT ON	DECLARE @IDR INT	SET @IDR = (SELECT IDRanura FROM DELETED)	IF EXISTS(SELECT @IDR FROM Ranura_Detalle_Per)	 BEGIN		DELETE FROM Ranura_Detalle_Per WHERE IDRanura = @IDR		PRINT 'SE ELIMINO PERIFERICO DE RANURA'	 END	IF EXISTS(SELECT @IDR FROM Ranura_Detalle_Hard)	 BEGIN		DELETE FROM Ranura_Detalle_Hard WHERE IDRanura = @IDR		PRINT 'SE ELIMINO HARDWARE DE RANURA'	 END END");
			/*ELIMINA LA COMPUTADORA EN TODAS LAS TABLAS RELACIONADAS, MENOS EN DETALLE DE FACTURA*/
			Sql("CREATE TRIGGER TGR_DEL_COMPUTADORA ON Computadora FOR DELETE AS BEGIN	SET NOCOUNT ON	DECLARE @IDC CHAR(7)	SET @IDC = (SELECT Codigo_PC FROM DELETED)	IF EXISTS(SELECT @IDC FROM Tarjeta_M)	 BEGIN		DELETE FROM Tarjeta_M WHERE Codigo_PC = @IDC		PRINT 'SE ELIMINO TARJETA DE COMPUTADORA'	 END	IF EXISTS(SELECT @IDC FROM Especificaciones)	 BEGIN		DELETE FROM Especificaciones WHERE Codigo_PC = @IDC		PRINT 'SE ELIMINO ESPECIFICACIONES DE COMPUTADORA'	 END	IF EXISTS(SELECT @IDC FROM Disponibilidad)	 BEGIN		DELETE FROM Disponibilidad WHERE Codigo_PC = @IDC		PRINT 'SE ELIMINO DISPONIBILIDAD DE COMPUTADORA'	 END	IF EXISTS(SELECT @IDC FROM Computadora_Software)	 BEGIN		DELETE FROM Computadora_Software WHERE Codigo_PC = @IDC		PRINT 'SE ELIMINO SOFTWARE DE COMPUTADORA'	 END	IF EXISTS(SELECT @IDC FROM Computadora_Perifericos)	 BEGIN		DELETE FROM Computadora_Perifericos WHERE Codigo_PC = @IDC		PRINT 'SE ELIMINO PERIFERICOS DE COMPUTADORA'	 END END");
			/*ELIMINA EL SOFTWARE EN TODAS LAS TABLAS RELACIONADAS, MENOS EN DETALLE DE FACTURA*/
			Sql("CREATE TRIGGER TGR_DEL_SOFTWARE			ON Software			FOR DELETE			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDS INT					SET @IDS = (SELECT IDSoftware FROM DELETED)					 IF EXISTS(SELECT @IDS FROM Computadora_Software)					 BEGIN						DELETE FROM Computadora_Software WHERE IDSoftware = @IDS						PRINT 'SE ELIMINO SOFTWARE DE COMPUTADORA'					 END				 END				");
			/*ELIMINA LA FACTURA EN TODAS LAS TABLAS RELACIONADAS*/
			Sql("CREATE TRIGGER TGR_DEL_FACTURA			ON Factura			FOR DELETE			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDF INT					SET @IDF = (SELECT IDFactura FROM DELETED)					IF EXISTS(SELECT @IDF FROM Factura_Detalle_Comp)					 BEGIN						DELETE FROM Factura_Detalle_Comp WHERE IDFactura = @IDF						PRINT 'SE ELIMINO DETALLE DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDF FROM Factura_Detalle_Soft)					 BEGIN						DELETE FROM Factura_Detalle_Soft WHERE IDFactura = @IDF						PRINT 'SE ELIMINO DETALLE DE SOFTWARE'					 END					IF EXISTS(SELECT @IDF FROM Factura_Detalle_Per)					 BEGIN						DELETE FROM Factura_Detalle_Per WHERE IDFactura = @IDF						PRINT 'SE ELIMINO DETALLE DE PERIFERICO'					 END				 END				");
			/*ACTUALIZA EL CODIGO_PC EN TODAS LAS TABLAS RELACIONADAS*/
			Sql("CREATE TRIGGER TGR_UPD_COMPUTADORA			ON Computadora			FOR UPDATE			AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDCD CHAR(7),@IDCI CHAR(7)					SET @IDCD = (SELECT Codigo_PC FROM DELETED)					SET @IDCI = (SELECT Codigo_PC FROM INSERTED)					IF EXISTS(SELECT @IDCD FROM Tarjeta_M)					 BEGIN						UPDATE Tarjeta_M SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC TARJETA DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDCD FROM Especificaciones)					 BEGIN						UPDATE Especificaciones SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC ESPECIFICACIONES DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDCD FROM Disponibilidad)					 BEGIN						UPDATE Disponibilidad SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC DISPONIBILIDAD DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDCD FROM Computadora_Software)					 BEGIN						UPDATE Computadora_Software SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC SOFTWARE DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDCD FROM Computadora_Perifericos)					 BEGIN						UPDATE Computadora_Perifericos SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC PERIFERICOS DE COMPUTADORA'					 END					IF EXISTS(SELECT @IDCD FROM Factura_Detalle_Comp)					 BEGIN						UPDATE Factura_Detalle_Comp SET Codigo_PC = @IDCI WHERE Codigo_PC = @IDCD						PRINT 'SE ACTUALIZO CODIGO_PC DETALLE DE COMPUTADORA'					 END				 END				");
			/*ACTUALIZA EL IDPeriferico EN TODAS LAS TABLAS RELACIONADAS*/
			Sql("CREATE TRIGGER TGR_UPD_PERIFERICOS				ON Perifericos				FOR UPDATE				AS				 BEGIN					SET NOCOUNT ON					DECLARE @IDPD CHAR(7), @IDPI CHAR(7)					SET @IDPD = (SELECT IDPeriferico FROM DELETED)					SET @IDPI = (SELECT IDPeriferico FROM INSERTED)					IF EXISTS(SELECT @IDPD FROM Impresora)					 BEGIN						UPDATE Impresora SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO IMPRESORA'					 END					IF EXISTS(SELECT @IDPD FROM Auxiliar)					 BEGIN						UPDATE Auxiliar SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO AUXILIAR'					 END					IF EXISTS(SELECT @IDPD FROM Monitor)					 BEGIN						UPDATE Monitor SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO MONITOR'					 END					IF EXISTS(SELECT @IDPD FROM Computadora_Perifericos)					 BEGIN						UPDATE Computadora_Perifericos SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO PERIFERICOS A COMPUTADORA'					 END					IF EXISTS(SELECT @IDPD FROM Factura_Detalle_Per)					 BEGIN						UPDATE Factura_Detalle_Per SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO DETALLE DE PERIFERICOS'					 END					IF EXISTS(SELECT @IDPD FROM Ranura_Detalle_Per)					 BEGIN						UPDATE Ranura_Detalle_Per SET IDPeriferico = @IDPI WHERE IDPeriferico = @IDPD						PRINT 'SE ACTUALIZO IDPERIFERICO DETALLE DE RANURA A PERIFERICOS'					 END				 END				");

		}

		public override void Down()
		{
		}
	}
}
